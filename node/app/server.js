// Generated by CoffeeScript 1.8.0
(function() {
  var WC, async, bodyParser, express, jena, lmdb, myapi, server;

  express = require('express');

  WC = express();

  bodyParser = require('body-parser');

  async = require('async');

  lmdb = require('./modules/queries');

  myapi = require('./modules/myapifilms');

  jena = require('./modules/jena');


  /*
   * Server config
   */

  server = WC.listen(3000, function() {
    var host, port;
    host = server.address().address;
    return port = server.address().port;
  });


  /*
   * Static content
   */

  WC.use(express["static"](__dirname + '/static'));

  WC.use(bodyParser.urlencoded({
    extended: true
  }));


  /*
   * Routing
   */

  WC.route('/autocomplete').post(function(req, res) {
    var text;
    text = req.body.val;
    return myapi.autocomplete(text, function(err, data) {
      var d;
      data = JSON.parse(data);
      return res.json((function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          d = data[_i];
          _results.push(d.title);
        }
        return _results;
      })());
    });
  });

  WC.route('/search').post(function(req, res) {
    var text;
    text = req.body.val;
    return lmdb.search({
      title: text
    }, function(err, contents) {
      if (err) {
        console.log(err);
      }
      return res.json(contents.toString());
    });
  });

  WC.route('/recommend').post(function(req, res) {
    return jena.recommend(function(err, contents) {
      if (err) {
        console.log(err);
      }
      return res.json(contents.toString());
    });
  });

  WC.route('/lmdb').post(function(req, res) {
    return jena.lmdb(function(err, contents) {
      if (err) {
        return console.log(err);
      }
    });
  });

}).call(this);
